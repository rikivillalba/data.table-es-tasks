temp3[LTM_year_last >= -18,`Años desde el presente` := factor(
paste0("y", LTM_year_last), paste0("y", -18:-0))] |>
melt(, patterns("^T\\.")) |>
ggplot(aes(y= value, x = `Años desde el presente`))  + geom_boxplot() +
facet_wrap(vars(variable), scales = "free", ncol = 1)
temp3[,`Años desde el presente` := factor(
paste0("y", LTM_year_last), paste0("y", -18:-0))][LTM_year_last >= -18] |>
melt(, patterns("^T\\.")) |>
ggplot(aes(y= value, x = `Años desde el presente`))  + geom_boxplot() +
facet_wrap(vars(variable), scales = "free", ncol = 1)
temp3[,`Años desde el presente` := factor(
paste0("y", LTM_year_last), paste0("y", -18:-0))][LTM_year_last >= -18] |>
melt(, patterns("^T\\.")) |>
ggplot(aes(y= value, x = `Años desde el presente`))  + geom_boxplot() +
geom_text(label = "value", stat = "mean")+
facet_wrap(vars(variable), scales = "free", ncol = 1)
temp3[,`Años desde el presente` := factor(
paste0("y", LTM_year_last), paste0("y", -18:-0))][LTM_year_last >= -18] |>
melt(, patterns("^T\\.")) |>
ggplot(aes(y= value, x = `Años desde el presente`))  + geom_boxplot() +
geom_text(label = "value", stat = mean)+
facet_wrap(vars(variable), scales = "free", ncol = 1)
temp3_mean <- temp3[,`Años desde el presente` := factor(
paste0("y", LTM_year_last), paste0("y", -18:-0))][LTM_year_last >= -18] |>
melt(, patterns("^T\\.")) |>
_[,by = .(variable, LTM_year_last, `Años desde el presente`),.(value = mean(value))]
temp3[,`Años desde el presente` := factor(
paste0("y", LTM_year_last), paste0("y", -18:-0))][LTM_year_last >= -18] |>
melt(, patterns("^T\\.")) |>
ggplot(aes(y= value, x = `Años desde el presente`))  + geom_boxplot() +
geom_text(label = "value", data = temp3_mean)+
facet_wrap(vars(variable), scales = "free", ncol = 1)
temp3[,`Años desde el presente` := factor(
paste0("y", LTM_year_last), paste0("y", -18:-0))][LTM_year_last >= -18] |>
melt(, patterns("^T\\.")) |>
ggplot(aes(y= value, x = `Años desde el presente`))  + geom_boxplot() +
geom_text(label = value, data = temp3_mean)+
facet_wrap(vars(variable), scales = "free", ncol = 1)
temp3[,`Años desde el presente` := factor(
paste0("y", LTM_year_last), paste0("y", -18:-0))][LTM_year_last >= -18] |>
melt(, patterns("^T\\.")) |>
ggplot(aes(y= value, x = `Años desde el presente`))  + geom_boxplot() +
geom_text(label = values, data = temp3_mean)+
facet_wrap(vars(variable), scales = "free", ncol = 1)
temp3[,`Años desde el presente` := factor(
paste0("y", LTM_year_last), paste0("y", -18:-0))][LTM_year_last >= -18] |>
melt(, patterns("^T\\.")) |>
ggplot(aes(y= value, x = `Años desde el presente`))  + geom_boxplot() +
geom_text(aes(label = value), data = temp3_mean) +
facet_wrap(vars(variable), scales = "free", ncol = 1)
temp3[,`Años desde el presente` := factor(
paste0("y", LTM_year_last), paste0("y", -18:-0))][LTM_year_last >= -18] |>
melt(, patterns("^T\\.")) |>
ggplot(aes(y= value, x = `Años desde el presente`))  + geom_boxplot() +
geom_text(aes(label = value), inherit.aes = T, data = temp3_mean) +
facet_wrap(vars(variable), scales = "free", ncol = 1)
temp3[,`Años desde el presente` := factor(
paste0("y", LTM_year_last), paste0("y", -18:-0))][LTM_year_last >= -18] |>
melt(, patterns("^T\\.")) |>
ggplot(aes(y= value, x = `Años desde el presente`))  + geom_boxplot() +
facet_wrap(vars(variable), scales = "free", ncol = 1) +
geom_text(aes(label = value), inherit.aes = T, data = temp3_mean) +
temp3[,`Años desde el presente` := factor(
paste0("y", LTM_year_last), paste0("y", -18:-0))][LTM_year_last >= -18] |>
melt(, patterns("^T\\.")) |>
ggplot(aes(y= value, x = `Años desde el presente`))  + geom_boxplot() +
facet_wrap(vars(variable), scales = "free", ncol = 1) +
geom_text(aes(label = value), inherit.aes = T, data = temp3_mean)
temp3[,`Años desde el presente` := factor(
paste0("y", LTM_year_last), paste0("y", -18:-0))][LTM_year_last >= -18] |>
melt(, patterns("^T\\.")) |>
ggplot(aes(y= value, x = `Años desde el presente`))  + geom_boxplot() +
facet_wrap(vars(variable), scales = "free", ncol = 1) +
geom_text(aes(label = value), inherit.aes = F, data = temp3_mean)
temp3[,`Años desde el presente` := factor(
paste0("y", LTM_year_last), paste0("y", -18:-0))][LTM_year_last >= -18] |>
melt(, patterns("^T\\.")) |>
ggplot(aes(y= value, x = `Años desde el presente`))  + geom_boxplot() +
geom_text(aes(label = value, x = `Años desde el presente`),  data = temp3_mean) +
facet_wrap(vars(variable), scales = "free", ncol = 1)
temp3[,`Años desde el presente` := factor(
paste0("y", LTM_year_last), paste0("y", -18:-0))][LTM_year_last >= -18] |>
melt(, patterns("^T\\.")) |>
ggplot(aes(y= value, x = `Años desde el presente`))  + geom_boxplot() +
geom_text(aes(label = sprintf("%02.1d",value), x = `Años desde el presente`),  data = temp3_mean) +
facet_wrap(vars(variable), scales = "free", ncol = 1) +
temp3[,`Años desde el presente` := factor(
paste0("y", LTM_year_last), paste0("y", -18:-0))][LTM_year_last >= -18] |>
melt(, patterns("^T\\.")) |>
ggplot(aes(y= value, x = `Años desde el presente`))  + geom_boxplot() +
geom_text(aes(label = sprintf("%02.1d",value), x = `Años desde el presente`),  data = temp3_mean) +
facet_wrap(vars(variable), scales = "free", ncol = 1)
temp3[,`Años desde el presente` := factor(
paste0("y", LTM_year_last), paste0("y", -18:-0))][LTM_year_last >= -18] |>
melt(, patterns("^T\\.")) |>
ggplot(aes(y= value, x = `Años desde el presente`))  + geom_boxplot() +
geom_text(aes(label = sprintf("%02.1f",value), x = `Años desde el presente`),  data = temp3_mean) +
facet_wrap(vars(variable), scales = "free", ncol = 1)
temp3[,`Años desde el presente` := factor(
paste0("y", LTM_year_last), paste0("y", -18:-0))][LTM_year_last >= -18] |>
melt(, patterns("^T\\.")) |>
ggplot(aes(y= value, x = `Años desde el presente`))  + geom_boxplot() +
geom_text(aes(label = sprintf("%02.1f",value), x = `Años desde el presente`, vjust = 1),  data = temp3_mean) +
facet_wrap(vars(variable), scales = "free", ncol = 1)
temp3[,`Años desde el presente` := factor(
paste0("y", LTM_year_last), paste0("y", -18:-0))][LTM_year_last >= -18] |>
melt(, patterns("^T\\.")) |>
ggplot(aes(y= value, x = `Años desde el presente`))  + geom_boxplot() +
geom_text(
aes(label = sprintf("%02.1f",value), x = `Años desde el presente`),
vjust = 1, size = 5,  data = temp3_mean) +
facet_wrap(vars(variable), scales = "free", ncol = 1)
temp3[,`Años desde el presente` := factor(
paste0("y", LTM_year_last), paste0("y", -18:-0))][LTM_year_last >= -18] |>
melt(, patterns("^T\\.")) |>
ggplot(aes(y= value, x = `Años desde el presente`))  + geom_boxplot() +
geom_text(
aes(label = sprintf("%02.1f",value), x = `Años desde el presente`),
vjust = -1, size = 2,  data = temp3_mean) +
facet_wrap(vars(variable), scales = "free", ncol = 1)
temp3[,`Años desde el presente` := factor(
paste0("y", LTM_year_last), paste0("y", -18:-0))][LTM_year_last >= -18] |>
melt(, patterns("^T\\.")) |>
ggplot(aes(y= value, x = `Años desde el presente`))  + geom_boxplot() +
geom_text(
aes(label = sprintf("%02.1f",value), x = `Años desde el presente`),
vjust = -1, size = 3,  data = temp3_mean) +
facet_wrap(vars(variable), scales = "free", ncol = 1)
temp3[,`Años desde el presente` := factor(
paste0("y", LTM_year_last), paste0("y", -18:-0))][LTM_year_last >= -18] |>
melt(, patterns("^T\\.")) |>
ggplot(aes(y= value, x = `Años desde el presente`))  + geom_boxplot() +
geom_text(
aes(label = sprintf("%02.1f",value), x = `Años desde el presente`),
vjust = -0.8, size = 3,  data = temp3_mean) +
facet_wrap(vars(variable), scales = "free", ncol = 1)
temp3[,`Años desde el presente` := factor(
paste0("y", LTM_year_last), paste0("y", -18:-0))][LTM_year_last >= -18] |>
melt(, patterns("^T\\.")) |>
ggplot(aes(y= value, x = `Años desde el presente`))  + geom_boxplot() +
geom_text(
aes(label = sprintf("%02.1f",value), x = `Años desde el presente`),
vjust = -0.5, size = 3,  data = temp3_mean) +
facet_wrap(vars(variable), scales = "free", ncol = 1)
temp3[,`Años desde el presente` := factor(
paste0("y", LTM_year_last), paste0("y", -18:-0))][LTM_year_last >= -18] |>
melt(, patterns("^T\\.")) |>
ggplot(aes(y= value, x = `Años desde el presente`))  + geom_boxplot() +
geom_text(
aes(label = sprintf("%02.1f",value), x = `Años desde el presente`),
nudge_y = 0.5, size = 3,  data = temp3_mean) +
facet_wrap(vars(variable), scales = "free", ncol = 1)
temp3[,`Años desde el presente` := factor(
paste0("y", LTM_year_last), paste0("y", -18:-0))][LTM_year_last >= -18] |>
melt(, patterns("^T\\.")) |>
ggplot(aes(y= value, x = `Años desde el presente`))  + geom_boxplot() +
geom_text(
aes(label = sprintf("%02.1f",value), x = `Años desde el presente`),
nudge_y = 1.5, size = 3,  data = temp3_mean) +
facet_wrap(vars(variable), scales = "free", ncol = 1)
temp3_median <- temp3[,`Años desde el presente` := factor(
paste0("y", LTM_year_last), paste0("y", -18:-0))][LTM_year_last >= -18] |>
melt(, patterns("^T\\.")) |>
_[,by = .(variable, LTM_year_last, `Años desde el presente`),.(value = median(value))]
temp3[,`Años desde el presente` := factor(
paste0("y", LTM_year_last), paste0("y", -18:-0))][LTM_year_last >= -18] |>
melt(, patterns("^T\\.")) |>
ggplot(aes(y= value, x = `Años desde el presente`))  + geom_boxplot() +
geom_text(
aes(label = sprintf("%02.1f",value), x = `Años desde el presente`),
size = 3, nudge_y = 1,  data = temp3_median) +
facet_wrap(vars(variable), scales = "free", ncol = 1)
temp3[,`Años desde el presente` := factor(
paste0("y", LTM_year_last), paste0("y", -18:-0))][LTM_year_last >= -18] |>
melt(, patterns("^T\\.")) |>
ggplot(aes(y= value, x = `Años desde el presente`))  + geom_boxplot() +
geom_text(
aes(label = sprintf("%02.1f",value), x = `Años desde el presente`),
size = 3, nudge_y = 1.2,  data = temp3_median) +
facet_wrap(vars(variable), scales = "free", ncol = 1)
temp3[,`Años desde el presente` := factor(
paste0("y", LTM_year_last), paste0("y", -18:-0))][LTM_year_last >= -18] |>
melt(, patterns("^T\\.")) |>
ggplot(aes(y= value, x = `Años desde el presente`))  + geom_boxplot() +
geom_text(
aes(label = sprintf("%02.1f",value), x = `Años desde el presente`),
size = 3, nudge_y = 1.3,  data = temp3_median) +
facet_wrap(vars(variable), scales = "free", ncol = 1)
temp3[,`Años desde el presente` := factor(
paste0("y", LTM_year_last), paste0("y", -18:-0))][LTM_year_last >= -18] |>
melt(, patterns("^T\\.")) |>
ggplot(aes(y= value, x = `Años desde el presente`))  + geom_boxplot() +
geom_text(
aes(label = sprintf("%02.1f",value), x = `Años desde el presente`),
size = 3, nudge_y = 1.5,  data = temp3_median) +
facet_wrap(vars(variable), scales = "free", ncol = 1)
max(temp3$FECHA)
nchar(c("a", NA))
which(nchar(c("a", NA))>0)
\"a"
\"a\"
b
""
\""
\a
\"a"
\"a\"
\""
\"a\"
b
\"a\"bcd
""
`"`
`\"`
\"a
=1
\a
\\
{
# entorno conda donde se instaló "translate toolkit"
# (esto funciona para mi caso en windows. Yo lo instalé en "main")
#TODO: usar el que corresponde. O Iniciar R desde un entorno donde
# md2po esté idsponible.
condaenv <- "main"
tryCatch(
system2("md2po", "--version", stderr = TRUE),
error = \(e) {
message("cargar ruta de conda. env: \"", condaenv, "\"")
md2po_path <- file.path(
dirname(dirname(reticulate::conda_binary())), "envs", condaenv,"Scripts")
Sys.setenv(
PATH = paste(md2po_path, Sys.getenv("PATH"), sep = .Platform$path.sep))
}
)
}
installed.packages()
{
# entorno conda donde se instaló "translate toolkit"
# (esto funciona para mi caso en windows. Yo lo instalé en "main")
#TODO: usar el que corresponde. O Iniciar R desde un entorno donde
# md2po esté idsponible.
condaenv <- "main"
tryCatch(
system2("md2po", "--version", stderr = TRUE),
error = \(e) {
message("cargar ruta de conda. env: \"", condaenv, "\"")
md2po_path <- file.path(
dirname(dirname(reticulate::conda_binary())), "envs", condaenv,"Scripts")
Sys.setenv(
PATH = paste(md2po_path, Sys.getenv("PATH"), sep = .Platform$path.sep))
}
)
}
# Función auxiliar para sustitución con regmatches<-
regex_sub <- function(x, pattern, ...) {
matches <- regexec(pattern, x)
drop_first <- function(x) {
if(!anyNA(x) && all(x > 0)) {
ml <- attr(x, 'match.length')
if(is.matrix(x)) x <- x[-1,] else x <- x[-1]
attr(x, 'match.length') <- if(is.matrix(ml)) ml[-1,] else ml[-1]
}
x
}
regmatches(x, lapply(matches, drop_first)) <- Map(f = c, ...)
x
}
.combinar_plain_txt_en_po <- function() {
# Script para cargar los archivos .txt generados en los po originales
# los txt se generan ocn el script siguiente :
# find *.po -exec sh -c "msggrep --no-wrap -Ke '' {} | sed -nE '/^$|(msgid)/p' | sed -E 's/^msgid \\\"(.*)\\\"/\\1/' > {}.txt" \;
# al estar línea por línea soin más faciles de traducir masivamente
# (aunque puede tener algún prolema con los escapees tipo \n)
# por ejemplo cargando en GITHUB y luego pedirle a google que
# traduzca el link RAW
pwd <- getwd()
on.exit(setwd(pwd))
setwd("es/po")
po_files  <- dir(pattern="po$")
po_txt_files <- paste0(po_files, ".txt")
stopifnot(all(file.exists(po_txt_files)))
for (f in split(data.frame(po_files, po_txt_files), po_files)) {
message(f$po_files)
# REQUIERE: (mingw) (usa echo -n. Yo usé el de GIT)
# CUIDADO: Elimina toda la traducción del PO.
stopifnot(
file.copy(f$po_files, paste0(f$po_files,".bak"), overwrite = F))
tryCatch(
{
# Modificar el .PO para que las traducciones estén en 1 sola línea
# (compatible con windows mingw)
system2("sh", c("-c", shQuote(paste0(
"msgfilter", "--keep-header", "--no-wrap",
"-i", shQuote(f$po_files), "-o", shQuote(f$po_files), "cat"))))
lines_po <- readLines(f$po_files)
lines_txt <- readLines(f$po_txt_files)
lines_txt <- gsub("(?<!\\\\)\"", "\\\\\"", lines_txt, perl = T)
msgstr_pos <- grep("msgstr \"\"", lines_po)[-1]
# los .po y los archivos planos deben tener el mismo nro de
# elementos
if(length(msgstr_pos) != length(lines_txt))
stop(sprintf("po: %d líneas vs txt: %d líneas",
length(msgstr_pos), length(lines_txt)))
lines_po[msgstr_pos] <- paste0("msgstr \"", lines_txt, "\"")
writeLines(lines_po, paste0(f$po_files, ""))
file.remove( paste0(f$po_files,".bak"))
}
error = \(e){
# Actualiza la metadata en PO (fecha de revisión, Last translator...)
.actualizar_po_metadata <- function() {
pwd <- getwd()
on.exit(setwd(pwd))
setwd("es/po")
po_files  <- dir(pattern=".po$")
lapply(po_files, \(i) {
lines <- readLines(i) |>
regex_sub("\"Project-Id-Version: (.*)\\\\n\"", "0.0.1") |>
regex_sub("\"PO-Revision-Date: (.*)\\\\n\"", format(Sys.time(), format = "%Y-%m-%d %H:%M%z")) |>
regex_sub("\"Last-Translator: (.*)\\\\n\"", "Ricardo Villalba <rikivillalba@gmail.com>") |>
regex_sub("\"Language-Team: (.*)\\\\n\"", "es")  |>
append("\"Language: es\\n\"", after = grep("\"Language-Team: (.*)\\\\n\"", lines))
writeLines(lines, i)
})
}
last_translator <- list(
name = "Ricardo Villalba",
mail = "rikivillalba@gmail.com")
# Actualiza la metadata en PO (fecha de revisión, Last translator...)
.actualizar_po_metadata <- function() {
last_translator <- list(name = "Ricardo Villalba", mail = "rikivillalba@gmail.com")
pwd <- getwd()
on.exit(setwd(pwd))
setwd("es/po")
po_files  <- dir(pattern=".po$")
lapply(po_files, \(i) {
lines <- readLines(i) |>
regex_sub("\"Project-Id-Version: (.*)\\\\n\"", "0.0.1") |>
regex_sub("\"PO-Revision-Date: (.*)\\\\n\"", format(Sys.time(), format = "%Y-%m-%d %H:%M%z")) |>
regex_sub("\"Last-Translator: (.*)\\\\n\"", with(last_translator, sprintf("%s <%s>", name, mail))) |>
regex_sub("\"Language-Team: (.*)\\\\n\"", "es")  |>
append("\"Language: es\\n\"", after = grep("\"Language-Team: (.*)\\\\n\"", lines))
writeLines(lines, i)
})
}
generar_po_desde_rmd_en_ingles <- function() {
rmd_files <- dir(".Rmd$")
for (f in rmd_files) {
rmd2po()
po2rmd(f, lang = "es")
}
}
# Una vez traducidos los po, generar los rmd
convertir_po_a_rmd <- function() {
rmd_files <- dir("es", ".Rmd$")
for (f in rmd_files) {
po2rmd(f, lang = "es", verbose = TRUE)
}
}
# generar las viñetas html
generar_viñetas_html <- function() {
pwd <- getwd()
on.exit(setwd(pwd))
setwd("es")
rmd_files  <- dir(pattern=".Rmd$")
lapply(rmd_files, \(i) {
# Si no lo corrés en procesos independientes, hay un error CEDTA en data.table
# TODO: me propongo revisarlo
callr::r(\(f) knitr::knit2html(f), list(i))
})
# borrar markdown generados
file.remove(dir(pattern = "[.]md$"))
}
# Aquí: Script provisorio para traducir los títulos
traducir_titulos_rmd <- function() {
pwd <- getwd()
on.exit(setwd(pwd))
setwd("es")
titles_en <-
c(`datatable-benchmarking.Rmd` = "Benchmarking data.table",
`datatable-faq.Rmd` = "Frequently Asked Questions about data.table",
`datatable-importing.Rmd` = "Importing data.table",
`datatable-intro.Rmd` = "Introduction to data.table",
`datatable-keys-fast-subset.Rmd` = "Keys and fast binary search based subset",
`datatable-programming.Rmd` = "Programming on data.table",
`datatable-reference-semantics.Rmd` = "Reference semantics",
`datatable-reshape.Rmd` = "Efficient reshaping using data.tables",
`datatable-sd-usage.Rmd` = "Using .SD for Data Analysis",
`datatable-secondary-indices-and-auto-indexing.Rmd` = "Secondary indices and auto indexing"
)
titles_es <-
c(`datatable-benchmarking.Rmd` = "Benchmarking con data.table",
`datatable-faq.Rmd` = "Preguntas frecuentes sobre data.table",
`datatable-importing.Rmd` = "Importar data.table",
`datatable-intro.Rmd` = "Introducción a data.table",
`datatable-keys-fast-subset.Rmd` = "Claves y filtrado rápido con búsqueda binaria",
`datatable-programming.Rmd` = "Programación en data.table",
`datatable-reference-semantics.Rmd` = "Semántica de referencia",
`datatable-reshape.Rmd` = "Remodelado eficiente con data.table",
`datatable-sd-usage.Rmd` = "Uso de .SD para Análisis de datos",
`datatable-secondary-indices-and-auto-indexing.Rmd` = "Índices secundarios y auto indexación"
)
title_missing <-
c("joins and rolling joins", "data.table internals")
rmd_files  <- dir(pattern=".Rmd$")
lapply(rmd_files, \(i) {
if (i %in% names(titles_es)) {
lines <- readLines(i) |>
regex_sub("title: \"(.*)\"", titles_es[i])
writeLines(lines, i)
} else {warning(sprintf("título para %s no en titles_es", i))}
})
}
setwd("~\R\translations\data.table")
setwd("~\\R\\translations\\data.table")
generar_po_desde_rmd_en_ingles()
source("rmd2po.R")
source("vignettes/rmd2po.R")
rmd2po
formals(rmd2po)
generar_po_desde_rmd_en_ingles <- function() {
rmd_files <- dir(".Rmd$")
for (f in rmd_files) {
rmd2po(f, lang = "es")
#    po2rmd(f, lang = "es")
}
}
generar_po_desde_rmd_en_ingles()
# inicia en la carpeta "vignettes"
setwd("~/R/translations/data.table/vignettes")
source("rmd2po.R")
generar_po_desde_rmd_en_ingles()
rmd_files <- dir(".Rmd$")
rmd_files <- dir(,".Rmd$")
generar_po_desde_rmd_en_ingles <- function() {
rmd_files <- dir(,".Rmd$")
for (f in rmd_files) {
rmd2po(f, lang = "es")
}
}
generar_po_desde_rmd_en_ingles()
extrae_texto_de_msgid <- function() {
message("Extraer msgid de %d archivos...")
for (i in dir("es/po", ".po$")) {
lines <- grep(readLines(i), pattern = "^\\s*(\"|msg)", value= TRUE)
msgs <- grep("^\\s*msg", lines)
grps <- cut(seq_along(lines), c(msgs, Inf), labels = FALSE, right = FALSE)
text <- vapply(seq_along(msgs), "", FUN = function(j)
paste0(gsub(
"\\s*(msg(id|id_plural|str)(\\[\\d*\\])?)?\\s*\"(([^\"]|\\\\.)*)\".*",
"\\4", lines[grps == j]), collapse = ""))
writeLines(text[grep("^\\s*msgid", lines[msgs])], file.path("es/po", paste0(i, ".txt")))
}
message("Listo")
}
extrae_texto_de_msgid()
extrae_texto_de_msgid <- function() {
message("Extraer msgid de %d archivos...")
for (i in dir("es/po", ".po$")) {
lines <- grep(readLines(file.path("es/po", i)), pattern = "^\\s*(\"|msg)", value= TRUE)
msgs <- grep("^\\s*msg", lines)
grps <- cut(seq_along(lines), c(msgs, Inf), labels = FALSE, right = FALSE)
text <- vapply(seq_along(msgs), "", FUN = function(j)
paste0(gsub(
"\\s*(msg(id|id_plural|str)(\\[\\d*\\])?)?\\s*\"(([^\"]|\\\\.)*)\".*",
"\\4", lines[grps == j]), collapse = ""))
writeLines(text[grep("^\\s*msgid", lines[msgs])], file.path("es/po", paste0(i, ".txt")))
}
message("Listo")
}
extrae_texto_de_msgid <- function() {
message("Extraer msgid de %d archivos...")
for (i in dir("es/po", ".po$")) {
lines <- grep(readLines(file.path("es/po", i)), pattern = "^\\s*(\"|msg)", value= TRUE)
msgs <- grep("^\\s*msg", lines)
grps <- cut(seq_along(lines), c(msgs, Inf), labels = FALSE, right = FALSE)
text <- vapply(seq_along(msgs), "", FUN = function(j)
paste0(gsub(
"\\s*(msg(id|id_plural|str)(\\[\\d*\\])?)?\\s*\"(([^\"]|\\\\.)*)\".*",
"\\4", lines[grps == j]), collapse = ""))
writeLines(text[grep("^\\s*msgid", lines[msgs])], file.path("es/po", paste0(i, ".txt")))
}
message("Listo")
}
extrae_texto_de_msgid <- function() {
message("Extraer msgid de %d archivos...")
for (i in dir("es/po", ".po$")) {
lines <- grep(readLines(file.path("es/po", i)), pattern = "^\\s*(\"|msg)", value= TRUE)
msgs <- grep("^\\s*msg", lines)
grps <- cut(seq_along(lines), c(msgs, Inf), labels = FALSE, right = FALSE)
text <- vapply(seq_along(msgs), "", FUN = function(j) paste0(gsub(
"\\s*(msg(id|id_plural|str)(\\[\\d*\\])?)?\\s*\"(([^\"]|\\\\.)*)\".*",
"\\4", lines[grps == j]), collapse = ""))
writeLines(text[grep("^\\s*msgid", lines[msgs])], file.path("es/po", paste0(i, ".txt")))
}
message("Listo")
}
extrae_texto_de_msgid()
extrae_texto_de_msgid <- function() {
message("Extraer msgid de archivos...")
for (i in dir("es/po", ".po$")) {
lines <- grep(readLines(file.path("es/po", i)), pattern = "^\\s*(\"|msg)", value= TRUE)
msgs <- grep("^\\s*msg", lines)
grps <- cut(seq_along(lines), c(msgs, Inf), labels = FALSE, right = FALSE)
text <- vapply(seq_along(msgs), "", FUN = function(j) paste0(gsub(
"\\s*(msg(id|id_plural|str)(\\[\\d*\\])?)?\\s*\"(([^\"]|\\\\.)*)\".*",
"\\4", lines[grps == j]), collapse = ""))
writeLines(text[grep("^\\s*msgid", lines[msgs])], file.path("es/po", paste0(i, ".txt")))
}
message("Listo")
}
extrae_texto_de_msgid()
getOption("topLevelEnvironment")
